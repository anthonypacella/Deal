{"ast":null,"code":"// density of 4 for the lowest probability of collision\nconst SQUARE_DENSITY = 4; // 18 different colors only for easy distinction\n\nconst COLORS_NB = 18;\nconst DEFAULT_SATURATION = 50;\nconst DEFAULT_LIGHTNESS = 50; // 32 bit FNV-1a hash parameters\n\nconst FNV_PRIME = 16777619;\nconst OFFSET_BASIS = 2166136261;\n/**\n * @type {(str: string): number}\n */\n// based on the FNV-1a hash algorithm, modified for *signed* 32 bit integers http://www.isthe.com/chongo/tech/comp/fnv/index.html\n\nfunction simpleHash(str) {\n  return str.split('') // >>> 0 for 32 bit unsigned integer conversion https://2ality.com/2012/02/js-integers.html\n  .reduce((hash, char) => ((hash ^ char.charCodeAt(0)) >>> 0) * FNV_PRIME, OFFSET_BASIS);\n}\n/**\n * @type {import('.').identicon}\n */\n\n\nexport function identicon(username) {\n  let saturation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_SATURATION;\n  let lightness = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_LIGHTNESS;\n  const hash = simpleHash(username); // dividing hash by FNV_PRIME to get last XOR result for better color randomness (will be an integer except for empty string hash)\n\n  const hue = hash / FNV_PRIME % COLORS_NB * (360 / COLORS_NB);\n  const rects = [...Array(username ? 25 : 0).keys()] // 2 + ((3 * 5 - 1) - modulo) to concentrate squares at the center\n  .map(i => hash % (16 - i % 15) < SQUARE_DENSITY ? `<rect x=\"${i > 14 ? 7 - ~~(i / 5) : ~~(i / 5)}\" y=\"${i % 5}\" width=\"1\" height=\"1\"/>` : '').join(''); // xmlns attribute added in case of SVG file generation https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg#sect1\n\n  return `<svg viewBox=\"-1.5 -1.5 8 8\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"hsl(${hue} ${saturation}% ${lightness}%)\">${rects}</svg>`;\n}\n/**\n * @type {void}\n */\n\nexport const identiconSvg = // optional chaining only available on node 14+\nglobalThis.customElements && /*@__PURE__*/customElements.define('identicon-svg', class extends HTMLElement {\n  connectedCallback() {\n    this.identiconSvg();\n  }\n\n  attributeChangedCallback() {\n    this.identiconSvg();\n  }\n\n  static get observedAttributes() {\n    return ['username', 'saturation', 'lightness'];\n  }\n\n  identiconSvg() {\n    this.innerHTML = identicon(this.getAttribute('username') || \"\", this.getAttribute('saturation') || DEFAULT_SATURATION, this.getAttribute('lightness') || DEFAULT_LIGHTNESS);\n  }\n\n});","map":{"version":3,"names":["SQUARE_DENSITY","COLORS_NB","DEFAULT_SATURATION","DEFAULT_LIGHTNESS","FNV_PRIME","OFFSET_BASIS","simpleHash","str","split","reduce","hash","char","charCodeAt","identicon","username","saturation","lightness","hue","rects","Array","keys","map","i","join","identiconSvg","globalThis","customElements","define","HTMLElement","connectedCallback","attributeChangedCallback","observedAttributes","innerHTML","getAttribute"],"sources":["/Users/anthonypacella/Desktop/Coding-Bootcamp/Homework/Deal/client/node_modules/minidenticons/minidenticons.js"],"sourcesContent":["// density of 4 for the lowest probability of collision\nconst SQUARE_DENSITY = 4\n// 18 different colors only for easy distinction\nconst COLORS_NB = 18\nconst DEFAULT_SATURATION = 50\nconst DEFAULT_LIGHTNESS = 50\n\n// 32 bit FNV-1a hash parameters\nconst FNV_PRIME = 16777619\nconst OFFSET_BASIS = 2166136261\n\n/**\n * @type {(str: string): number}\n */\n// based on the FNV-1a hash algorithm, modified for *signed* 32 bit integers http://www.isthe.com/chongo/tech/comp/fnv/index.html\nfunction simpleHash(str) {\n    return str.split('')\n        // >>> 0 for 32 bit unsigned integer conversion https://2ality.com/2012/02/js-integers.html\n        .reduce((hash, char) => ((hash ^ char.charCodeAt(0)) >>> 0) * FNV_PRIME, OFFSET_BASIS)\n}\n\n/**\n * @type {import('.').identicon}\n */\nexport function identicon(username, saturation=DEFAULT_SATURATION, lightness=DEFAULT_LIGHTNESS) {\n    const hash = simpleHash(username)\n    // dividing hash by FNV_PRIME to get last XOR result for better color randomness (will be an integer except for empty string hash)\n    const hue = ((hash / FNV_PRIME) % COLORS_NB) * (360 / COLORS_NB)\n    const rects = [...Array(username ? 25 : 0).keys()]\n        // 2 + ((3 * 5 - 1) - modulo) to concentrate squares at the center\n        .map(i => hash % (16 - i % 15) < SQUARE_DENSITY ?\n            `<rect x=\"${i > 14 ? 7 - ~~(i/5) : ~~(i/5)}\" y=\"${i % 5}\" width=\"1\" height=\"1\"/>` : '')\n        .join('')\n    // xmlns attribute added in case of SVG file generation https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg#sect1\n    return `<svg viewBox=\"-1.5 -1.5 8 8\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"hsl(${hue} ${saturation}% ${lightness}%)\">${rects}</svg>`\n}\n\n/**\n * @type {void}\n */\nexport const identiconSvg =\n    // optional chaining only available on node 14+\n    globalThis.customElements && /*@__PURE__*/customElements.define('identicon-svg',\n        class extends HTMLElement {\n            connectedCallback() { this.identiconSvg() }\n            attributeChangedCallback() { this.identiconSvg() }\n            static get observedAttributes() { return ['username', 'saturation', 'lightness'] }\n            identiconSvg() {\n                this.innerHTML = identicon(\n                    this.getAttribute('username') || \"\",\n                    this.getAttribute('saturation') || DEFAULT_SATURATION,\n                    this.getAttribute('lightness') || DEFAULT_LIGHTNESS\n                )\n            }\n        }\n    )\n"],"mappings":"AAAA;AACA,MAAMA,cAAc,GAAG,CAAvB,C,CACA;;AACA,MAAMC,SAAS,GAAG,EAAlB;AACA,MAAMC,kBAAkB,GAAG,EAA3B;AACA,MAAMC,iBAAiB,GAAG,EAA1B,C,CAEA;;AACA,MAAMC,SAAS,GAAG,QAAlB;AACA,MAAMC,YAAY,GAAG,UAArB;AAEA;AACA;AACA;AACA;;AACA,SAASC,UAAT,CAAoBC,GAApB,EAAyB;EACrB,OAAOA,GAAG,CAACC,KAAJ,CAAU,EAAV,EACH;EADG,CAEFC,MAFE,CAEK,CAACC,IAAD,EAAOC,IAAP,KAAgB,CAAC,CAACD,IAAI,GAAGC,IAAI,CAACC,UAAL,CAAgB,CAAhB,CAAR,MAAgC,CAAjC,IAAsCR,SAF3D,EAEsEC,YAFtE,CAAP;AAGH;AAED;AACA;AACA;;;AACA,OAAO,SAASQ,SAAT,CAAmBC,QAAnB,EAAyF;EAAA,IAA5DC,UAA4D,uEAAjDb,kBAAiD;EAAA,IAA7Bc,SAA6B,uEAAnBb,iBAAmB;EAC5F,MAAMO,IAAI,GAAGJ,UAAU,CAACQ,QAAD,CAAvB,CAD4F,CAE5F;;EACA,MAAMG,GAAG,GAAKP,IAAI,GAAGN,SAAR,GAAqBH,SAAtB,IAAoC,MAAMA,SAA1C,CAAZ;EACA,MAAMiB,KAAK,GAAG,CAAC,GAAGC,KAAK,CAACL,QAAQ,GAAG,EAAH,GAAQ,CAAjB,CAAL,CAAyBM,IAAzB,EAAJ,EACV;EADU,CAETC,GAFS,CAELC,CAAC,IAAIZ,IAAI,IAAI,KAAKY,CAAC,GAAG,EAAb,CAAJ,GAAuBtB,cAAvB,GACL,YAAWsB,CAAC,GAAG,EAAJ,GAAS,IAAI,CAAC,EAAEA,CAAC,GAAC,CAAJ,CAAd,GAAuB,CAAC,EAAEA,CAAC,GAAC,CAAJ,CAAO,QAAOA,CAAC,GAAG,CAAE,0BADlD,GAC8E,EAH9E,EAITC,IAJS,CAIJ,EAJI,CAAd,CAJ4F,CAS5F;;EACA,OAAQ,6EAA4EN,GAAI,IAAGF,UAAW,KAAIC,SAAU,OAAME,KAAM,QAAhI;AACH;AAED;AACA;AACA;;AACA,OAAO,MAAMM,YAAY,GACrB;AACAC,UAAU,CAACC,cAAX,IAA6B,aAAaA,cAAc,CAACC,MAAf,CAAsB,eAAtB,EACtC,cAAcC,WAAd,CAA0B;EACtBC,iBAAiB,GAAG;IAAE,KAAKL,YAAL;EAAqB;;EAC3CM,wBAAwB,GAAG;IAAE,KAAKN,YAAL;EAAqB;;EACrB,WAAlBO,kBAAkB,GAAG;IAAE,OAAO,CAAC,UAAD,EAAa,YAAb,EAA2B,WAA3B,CAAP;EAAgD;;EAClFP,YAAY,GAAG;IACX,KAAKQ,SAAL,GAAiBnB,SAAS,CACtB,KAAKoB,YAAL,CAAkB,UAAlB,KAAiC,EADX,EAEtB,KAAKA,YAAL,CAAkB,YAAlB,KAAmC/B,kBAFb,EAGtB,KAAK+B,YAAL,CAAkB,WAAlB,KAAkC9B,iBAHZ,CAA1B;EAKH;;AAVqB,CADY,CAFvC"},"metadata":{},"sourceType":"module"}